/*  *  */define([    'underscore',     'backbone',     'config'], function(_, Backbone, Config){    "use strict";        return Backbone.View.extend({                zoom        : 3,        center      : [48.5786545922963, 63.18353775233202],        controls    : [],        defaultBounds: [            [-27.153218730079481, -36.13286849766799],            [79.952743093701071, 162.49994400233197]        ],                newBounds: [],        YMapNS      : Config.YMapNS,        YandexMap   : null,                initialize: function(options) {            this.parent = options.parent;            this.selfUser = this.parent.model.selfUser;            this.zoom = options.zoom ? options.zoom : this.zoom;            this.center = options.center ? options.center : this.center;            this.controls = options.controls ? options.controls : this.controls;                        this.YandexMap = new this.YMapNS.Map(options.el, {                center  : this.center,                zoom    : this.zoom,                controls: this.controls            });                        this.YandexMap.events.add('boundschange', function (e){                //                var oldZoom = e.get('oldZoom'),                     newZoom = e.get('newZoom'),                    oldCenter = e.get('oldCenter'),                    newCenter = e.get('newCenter');                                    this.newBounds = e.get('newBounds');                                    if(oldZoom !== newZoom){                    this.zoom = newZoom;                }                    if(oldCenter !== newCenter){//                    console.log(newCenter);                    this.center = newCenter;                }//                console.log(this.zoom);            }, this);                        this.YandexMap.events.add('dblclick', function (e){                e.preventDefault();            }, this);                        // Яндекс пробки            this.actualProvider = new this.YMapNS.traffic.provider.Actual({}, { infoLayerShown: true });            this.actualProvider.setMap(this.YandexMap);            // Удаление провайдера с карты также производится через метод setMap.            // actualProvider.setMap(null);        },        /**         * Включено ли отображение яндекс пробок...         */        showedTraffic: function() {            return (this.actualProvider === null) ? false : true;        },                showTraffic: function() {            if (this.actualProvider) return;            this.actualProvider = new this.YMapNS.traffic.provider.Actual({}, { infoLayerShown: true });            this.actualProvider.setMap(this.YandexMap);        },                hideTraffic: function() {            if (this.actualProvider === null) return;            this.actualProvider.setMap(null);            this.actualProvider = null;        },        setBounds: function(bounds) {//            console.log(bounds);            if(!bounds || !_.isArray(bounds) || _.isEmpty(bounds)){                bounds = this.defaultBounds;            }            this.YandexMap.setBounds(bounds, { checkZoomRange: true });        },                increaseZoom: function() {            var zoom = this.YandexMap.getZoom();            this.setZoom(++zoom);        },                decreaseZoom: function() {            var zoom = this.YandexMap.getZoom();            this.setZoom(--zoom);        },                setCenter: function(center) {            if(!center || ! _.isArray(center)){                return;            }            this.YandexMap.setCenter(center, this.zoom, {                checkZoomRange: true,                duration: 100            });        },        setZoom: function(zoom) {            if(!zoom){                zoom = this.zoom;            }            this.YandexMap.setZoom(zoom, {duration: 300, checkZoomRange: true});        },                destroy: function() {            this.YandexMap.destroy();        }            });    });