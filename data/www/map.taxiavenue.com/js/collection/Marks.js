define(function(require){    "use strict";        var _ = require('underscore'),        Backbone = require('backbone'),        Mark = require('model/Mark');            var cacheMark = [];    var countAdding = 5;        return Backbone.Collection.extend({        model: Mark,                createMarks: function(arrMarks, collectionKinds){            var marks = [];            cacheMark = []; // Сбрасываем кеш (при переходе между городами)            //arrMarks.forEach(function(model){            for (var i = 0; i < Object.keys(arrMarks).length; i++){                var model = arrMarks[i];                if (typeof model == 'undefined') continue;                var kind = collectionKinds.get(model.id_kind);                if(kind){                    model.kind = kind;                }                if (typeof model.city_name_en != 'undefined') model.kind.set('cityPartOfUri', model.city_name_en);                var audio = null;                if(model.audios && _.isArray(model.audios) && model.audios[0]){                    audio = model.audios[0].name;                }                delete model.audios;                model.audio = audio;                                var mark = Mark.create(model);                if(mark){                    marks.push(mark);                    //cacheMark.push(mark);                }                }            //}, this);            //this.set(this.getLastMark(15));            this.set(marks);        },        getLastMark: function(lastCount) {            var marks = [];            if (typeof lastCount == 'undefined') lastCount = 5;            for (var i = 0; i < lastCount; i++) {                if (cacheMark.length < 1) return marks;                marks.push(cacheMark.pop());            }            return marks;        },        hideMapMarks: function() {            this.forEach(function(mark){                mark.hideMapMark();            });        },                showMapMarks: function() {            this.forEach(function(mark){                mark.showMapMark();            });        },                /**         * Добавление значков в коллекцию         */        addMarksFromCache: function(callback) {             var marks = this.getLastMark(countAdding);            if (marks.length < 1) return callback(false);            //this.add(this.getLastMark(countAdding));            //this.add(marks);            callback(this);        }    });});